/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IGame, IGameInterface } from "../../../contracts/interfaces/IGame";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_collection",
        type: "address",
      },
    ],
    name: "addAllowedCollection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_xp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_sessionsPlayed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_claimable",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rankingScore",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_bestScore",
        type: "uint256",
      },
    ],
    name: "addNewPlayer",
    outputs: [
      {
        internalType: "uint256",
        name: "userIndex",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountToDistribute",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_number",
        type: "uint8",
      },
    ],
    name: "distributeRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "getPlayerNftStats",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isNft",
            type: "bool",
          },
          {
            internalType: "address",
            name: "nftContractAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boostValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "since",
            type: "uint256",
          },
        ],
        internalType: "struct SharedStructs.NftStat",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "getPlayerStats",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "xp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sessionsPlayed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimable",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalWon",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rankingScore",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bestScore",
            type: "uint256",
          },
        ],
        internalType: "struct SharedStructs.Player",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTop10",
    outputs: [
      {
        internalType: "address[10]",
        name: "",
        type: "address[10]",
      },
      {
        internalType: "uint256[10]",
        name: "",
        type: "uint256[10]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSessionsPlayed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "isPlayerInGameId",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collection",
        type: "address",
      },
    ],
    name: "removeAllowedCollection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "resetAllrankingScores",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "resetClaimable",
    outputs: [
      {
        internalType: "uint256",
        name: "withdrawn",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "resetNftStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isNFT",
        type: "bool",
      },
      {
        internalType: "address",
        name: "_nftContractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nftBoost",
        type: "uint256",
      },
    ],
    name: "setNftStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_players",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_numbers",
        type: "uint256[]",
      },
    ],
    name: "updateAllPlayersStats",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IGame__factory {
  static readonly abi = _abi;
  static createInterface(): IGameInterface {
    return new utils.Interface(_abi) as IGameInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IGame {
    return new Contract(address, _abi, signerOrProvider) as IGame;
  }
}
