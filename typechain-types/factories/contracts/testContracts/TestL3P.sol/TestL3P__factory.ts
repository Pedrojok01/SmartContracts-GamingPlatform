/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  TestL3P,
  TestL3PInterface,
} from "../../../../contracts/testContracts/TestL3P.sol/TestL3P";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "value",
        type: "uint256[]",
      },
    ],
    name: "multiTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "value",
        type: "uint256[]",
      },
    ],
    name: "multiTransferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600e81526020016d2632b83934b1b7b7102a37b5b2b760911b8152506040518060400160405280600381526020016204c33560ec1b815250816003908162000066919062000250565b50600462000075828262000250565b505050620000b4336200008d620000ba60201b60201c565b6200009d9060ff16600a62000431565b620000ae9064174876e80062000446565b620000bf565b6200047e565b601290565b6001600160a01b0382166200011a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200012e919062000468565b90915550506001600160a01b038216600090815260208190526040812080548392906200015d90849062000468565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001d757607f821691505b602082108103620001f857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001a757600081815260208120601f850160051c81016020861015620002275750805b601f850160051c820191505b81811015620002485782815560010162000233565b505050505050565b81516001600160401b038111156200026c576200026c620001ac565b62000284816200027d8454620001c2565b84620001fe565b602080601f831160018114620002bc5760008415620002a35750858301515b600019600386901b1c1916600185901b17855562000248565b600085815260208120601f198616915b82811015620002ed57888601518255948401946001909101908401620002cc565b50858210156200030c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620003735781600019048211156200035757620003576200031c565b808516156200036557918102915b93841c939080029062000337565b509250929050565b6000826200038c575060016200042b565b816200039b575060006200042b565b8160018114620003b45760028114620003bf57620003df565b60019150506200042b565b60ff841115620003d357620003d36200031c565b50506001821b6200042b565b5060208310610133831016604e8410600b841016171562000404575081810a6200042b565b62000410838362000332565b80600019048211156200042757620004276200031c565b0290505b92915050565b60006200043f83836200037b565b9392505050565b60008160001904831182151516156200046357620004636200031c565b500290565b808201808211156200042b576200042b6200031c565b611094806200048e6000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c8063395093511161008c578063a457c2d711610066578063a457c2d7146101bd578063a9059cbb146101d0578063cb31b6cd146101e3578063dd62ed3e146101f657600080fd5b8063395093511461016c57806370a082311461017f57806395d89b41146101b557600080fd5b80631e89d545116100bd5780631e89d5451461013757806323b872dd1461014a578063313ce5671461015d57600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec61023c565b6040516100f99190610bcb565b60405180910390f35b610115610110366004610c60565b6102ce565b60405190151581526020016100f9565b6002545b6040519081526020016100f9565b610115610145366004610df9565b6102e8565b610115610158366004610e5d565b610429565b604051601281526020016100f9565b61011561017a366004610c60565b61044d565b61012961018d366004610e99565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6100ec610499565b6101156101cb366004610c60565b6104a8565b6101156101de366004610c60565b610579565b6101156101f1366004610ebb565b610587565b610129610204366004610f2f565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461024b90610f62565b80601f016020809104026020016040519081016040528092919081815260200182805461027790610f62565b80156102c45780601f10610299576101008083540402835291602001916102c4565b820191906000526020600020905b8154815290600101906020018083116102a757829003601f168201915b5050505050905090565b6000336102dc818585610692565b60019150505b92915050565b600080835111610359576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f456d70747920617272617900000000000000000000000000000000000000000060448201526064015b60405180910390fd5b82518251146103c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4c656e677468206d69736d6174636865640000000000000000000000000000006044820152606401610350565b60005b835181101561041f5761040d338583815181106103e6576103e6610fb5565b602002602001015185848151811061040057610400610fb5565b6020026020010151610845565b8061041781611013565b9150506103c7565b5060019392505050565b600033610437858285610afa565b610442858585610845565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906102dc908290869061049490879061104b565b610692565b60606004805461024b90610f62565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091908381101561056c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610350565b6104428286868403610692565b6000336102dc818585610845565b6000808351116105f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f456d7074792061727261790000000000000000000000000000000000000000006044820152606401610350565b825182511461065e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4c656e677468206d69736d6174636865640000000000000000000000000000006044820152606401610350565b60005b835181101561044257610680858583815181106103e6576103e6610fb5565b8061068a81611013565b915050610661565b73ffffffffffffffffffffffffffffffffffffffff8316610734576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610350565b73ffffffffffffffffffffffffffffffffffffffff82166107d7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610350565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff83166108e8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610350565b73ffffffffffffffffffffffffffffffffffffffff821661098b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610350565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610a41576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610350565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220858503905591851681529081208054849290610a8590849061104b565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610aeb91815260200190565b60405180910390a35b50505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610af45781811015610bbe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610350565b610af48484848403610692565b600060208083528351808285015260005b81811015610bf857858101830151858201604001528201610bdc565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610c5b57600080fd5b919050565b60008060408385031215610c7357600080fd5b610c7c83610c37565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610d0057610d00610c8a565b604052919050565b600067ffffffffffffffff821115610d2257610d22610c8a565b5060051b60200190565b600082601f830112610d3d57600080fd5b81356020610d52610d4d83610d08565b610cb9565b82815260059290921b84018101918181019086841115610d7157600080fd5b8286015b84811015610d9357610d8681610c37565b8352918301918301610d75565b509695505050505050565b600082601f830112610daf57600080fd5b81356020610dbf610d4d83610d08565b82815260059290921b84018101918181019086841115610dde57600080fd5b8286015b84811015610d935780358352918301918301610de2565b60008060408385031215610e0c57600080fd5b823567ffffffffffffffff80821115610e2457600080fd5b610e3086838701610d2c565b93506020850135915080821115610e4657600080fd5b50610e5385828601610d9e565b9150509250929050565b600080600060608486031215610e7257600080fd5b610e7b84610c37565b9250610e8960208501610c37565b9150604084013590509250925092565b600060208284031215610eab57600080fd5b610eb482610c37565b9392505050565b600080600060608486031215610ed057600080fd5b610ed984610c37565b9250602084013567ffffffffffffffff80821115610ef657600080fd5b610f0287838801610d2c565b93506040860135915080821115610f1857600080fd5b50610f2586828701610d9e565b9150509250925092565b60008060408385031215610f4257600080fd5b610f4b83610c37565b9150610f5960208401610c37565b90509250929050565b600181811c90821680610f7657607f821691505b602082108103610faf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361104457611044610fe4565b5060010190565b808201808211156102e2576102e2610fe456fea2646970667358221220ea73d4e7edd09f7be0a8270b4f1730979efadd65c26b97b30d26006bf87ff65b64736f6c63430008100033";

type TestL3PConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestL3PConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestL3P__factory extends ContractFactory {
  constructor(...args: TestL3PConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestL3P> {
    return super.deploy(overrides || {}) as Promise<TestL3P>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestL3P {
    return super.attach(address) as TestL3P;
  }
  override connect(signer: Signer): TestL3P__factory {
    return super.connect(signer) as TestL3P__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestL3PInterface {
    return new utils.Interface(_abi) as TestL3PInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestL3P {
    return new Contract(address, _abi, signerOrProvider) as TestL3P;
  }
}
